{
  "elements": [
    {
      "description": "", 
      "parameters": [], 
      "brief": "iac type", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "iac.TYPE_INVOCATION"
    }, 
    {
      "description": "The listener callback has the following signature: function(self, payload, type) where payload is a table\nwith the iac payload and type is an iac.TYPE_<TYPE> enumeration.", 
      "parameters": [
        {
          "doc": "listener callback function (function)", 
          "name": "listener"
        }
      ], 
      "brief": "set iac listener", 
      "examples": "<p>\nSet the iac listener.\n</p>\n<pre>\nlocal function iac_listener(self, payload, type)\n     if type == iac.TYPE_INVOCATION then\n         -- This was an invocation\n         print(payload.origin) -- origin may be empty string if it could not be resolved\n         print(payload.url)\n     end\nend\n\nlocal init(self)\n     ...\n     iac.set_listener(iac_listener)\nend", 
      "type": "FUNCTION", 
      "return_": "", 
      "name": "iac.set_listener"
    }
  ]
}