{
  "elements": [
    {
      "description": "", 
      "parameters": [
        {
          "doc": "quaternion of which to calculate the conjugate (quaternion)", 
          "name": "q"
        }
      ], 
      "brief": "calculates the conjugate of a quaternion", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "the conjugate (quaternion)", 
      "name": "vmath.conj"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "first vector (vector3)", 
          "name": "v1"
        }, 
        {
          "doc": "second vector (vector3)", 
          "name": "v2"
        }
      ], 
      "brief": "calculates the cross-product of two vectors", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "a new vector representing the cross product (vector3)", 
      "name": "vmath.cross"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "first vector (vector3 or vector4)", 
          "name": "v1"
        }, 
        {
          "doc": "second vector (vector3 or vector4)", 
          "name": "v1"
        }
      ], 
      "brief": "calculates the dot-product of two vectors", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "dot product (number)", 
      "name": "vmath.dot"
    }, 
    {
      "description": "<b>NOTE</b> For ortho-normal matrises, e.g. regular object transformation, use\nvmath.matrix4_ortho_inv instead. The specialized inverse for ortho-normalized matrices\nis much faster than the general inverse.", 
      "parameters": [
        {
          "doc": "matrix to invert (matrix4)", 
          "name": "m"
        }
      ], 
      "brief": "calculates the inverse matrix.", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "inverse of the supplied matrix (matrix4)", 
      "name": "vmath.inv"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "vector of which to calculate the length (vector3 or vector4)", 
          "name": "v"
        }
      ], 
      "brief": "calculates the vector length", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "vector length (number)", 
      "name": "vmath.length"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "vector of which to calculate the squared length (vector3 or vector4)", 
          "name": "v"
        }
      ], 
      "brief": "calculates the squared vector length", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "squared vector length (number)", 
      "name": "vmath.length_sqr"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "interpolation parameter, 0-1 (number)", 
          "name": "t"
        }, 
        {
          "doc": "vector to lerp from (vector3 or vector4)", 
          "name": "v1"
        }, 
        {
          "doc": "vector to lerp to (vector3 or vector4)", 
          "name": "v2"
        }
      ], 
      "brief": "lerps between two vectors", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "the lerped vector (vector3 or vector4)", 
      "name": "vmath.lerp"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "interpolation parameter, 0-1 (number)", 
          "name": "t"
        }, 
        {
          "doc": "quaternion to lerp from (quaternion)", 
          "name": "q1"
        }, 
        {
          "doc": "quaternion to lerp to (quaternion)", 
          "name": "q2"
        }
      ], 
      "brief": "lerps between two quaternions", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "the lerped quaternion (quaternion)", 
      "name": "vmath.lerp"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "interpolation parameter, 0-1 (number)", 
          "name": "t"
        }, 
        {
          "doc": "number to lerp from (number)", 
          "name": "n1"
        }, 
        {
          "doc": "number to lerp to (number)", 
          "name": "n2"
        }
      ], 
      "brief": "lerps between two numbers", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "the lerped number (number)", 
      "name": "vmath.lerp"
    }, 
    {
      "description": "An identity matrix describes a transform with no translation or rotation.", 
      "parameters": [], 
      "brief": "creates a new identity matrix", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "identity matrix (matrix4)", 
      "name": "vmath.matrix4"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "existing matrix (matrix4)", 
          "name": "m"
        }
      ], 
      "brief": "creates a new matrix from another existing matrix", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "matrix which is a copy of the specified matrix (matrix4)", 
      "name": "vmath.matrix4"
    }, 
    {
      "description": "The resulting matrix describes a rotation around the axis by the specified angle.", 
      "parameters": [
        {
          "doc": "axis (vector3)", 
          "name": "v"
        }, 
        {
          "doc": "angle in radians (number)", 
          "name": "angle"
        }
      ], 
      "brief": "creates a matrix from an axis and an angle", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "matrix represented by axis and angle (matrix4)", 
      "name": "vmath.matrix4_axis_angle"
    }, 
    {
      "description": "The resulting matrix describes the same rotation as the quaternion, but does not have any translation (also like the quaternion).", 
      "parameters": [
        {
          "doc": "quaternion to create matrix from (quaternion)", 
          "name": "q"
        }
      ], 
      "brief": "creates a matrix from a quaternion", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "matrix represented by quaternion (matrix4)", 
      "name": "vmath.matrix4_from_quat"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "coordinate for left clipping plane (number)", 
          "name": "left"
        }, 
        {
          "doc": "coordinate for right clipping plane (number)", 
          "name": "right"
        }, 
        {
          "doc": "coordinate for bottom clipping plane (number)", 
          "name": "bottom"
        }, 
        {
          "doc": "coordinate for top clipping plane (number)", 
          "name": "top"
        }, 
        {
          "doc": "coordinate for near clipping plane (number)", 
          "name": "near"
        }, 
        {
          "doc": "coordinate for far clipping plane (number)", 
          "name": "far"
        }
      ], 
      "brief": "creates a frustum matrix", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "matrix representing the frustum (matrix4)", 
      "name": "vmath.matrix4_frustum"
    }, 
    {
      "description": "This is useful to construct a view matrix for a camera or rendering in general.", 
      "parameters": [
        {
          "doc": "eye position (vector3)", 
          "name": "eye"
        }, 
        {
          "doc": "look-at position (vector3)", 
          "name": "look_at"
        }, 
        {
          "doc": "up vector (vector3)", 
          "name": "up"
        }
      ], 
      "brief": "creates a look-at view matrix", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "look-at matrix (matrix4)", 
      "name": "vmath.matrix4_look_at"
    }, 
    {
      "description": "This is useful to construct a projection matrix for a camera or rendering in general.", 
      "parameters": [
        {
          "doc": "coordinate for left clipping plane (number)", 
          "name": "left"
        }, 
        {
          "doc": "coordinate for right clipping plane (number)", 
          "name": "right"
        }, 
        {
          "doc": "coordinate for bottom clipping plane (number)", 
          "name": "bottom"
        }, 
        {
          "doc": "coordinate for top clipping plane (number)", 
          "name": "top"
        }, 
        {
          "doc": "coordinate for near clipping plane (number)", 
          "name": "near"
        }, 
        {
          "doc": "coordinate for far clipping plane (number)", 
          "name": "far"
        }
      ], 
      "brief": "creates an orthographic projection matrix", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "orthographic projection matrix (matrix4)", 
      "name": "vmath.matrix4_orthographic"
    }, 
    {
      "description": "This is useful to construct a projection matrix for a camera or rendering in general.", 
      "parameters": [
        {
          "doc": "angle of the full vertical field of view in radians (number)", 
          "name": "fov"
        }, 
        {
          "doc": "aspect ratio (number)", 
          "name": "aspect"
        }, 
        {
          "doc": "coordinate for near clipping plane (number)", 
          "name": "near"
        }, 
        {
          "doc": "coordinate for far clipping plane (number)", 
          "name": "far"
        }
      ], 
      "brief": "creates a perspective projection matrix", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "perspective projection matrix (matrix4)", 
      "name": "vmath.matrix4_perspective"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "angle in radians around x-axis (number)", 
          "name": "angle"
        }
      ], 
      "brief": "creates a matrix from rotation around x-axis", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "matrix from rotation around x-axis (matrix4)", 
      "name": "vmath.matrix4_rotation_x"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "angle in radians around y-axis (number)", 
          "name": "angle"
        }
      ], 
      "brief": "creates a matrix from rotation around y-axis", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "matrix from rotation around y-axis (matrix4)", 
      "name": "vmath.matrix4_rotation_y"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "angle in radians around z-axis (number)", 
          "name": "angle"
        }
      ], 
      "brief": "creates a matrix from rotation around z-axis", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "matrix from rotation around z-axis (matrix4)", 
      "name": "vmath.matrix4_rotation_z"
    }, 
    {
      "description": "The length of the vector must be above 0, otherwise a div-by-zero will occur.", 
      "parameters": [
        {
          "doc": "vector to normalize (vector3 or vector4)", 
          "name": "v"
        }
      ], 
      "brief": "normalizes a vector", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new normalized vector (vector3 or vector4)", 
      "name": "vmath.normalize"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "ortho-normalized matrix to invert (matrix4)", 
          "name": "m"
        }
      ], 
      "brief": "calculates the inverse of an ortho-normal matrix.", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "inverse of the supplied matrix (matrix4)", 
      "name": "vmath.ortho_inv"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "vector to be projected on the second (vector3)", 
          "name": "v1"
        }, 
        {
          "doc": "vector onto which the first will be projected, must not have zero length (vector3)", 
          "name": "v2"
        }
      ], 
      "brief": "projects a vector onto another vector", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "the projected extent of the first vector onto the second (number)", 
      "name": "vmath.project"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "creates a new identity quaternion", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new identity quaternion (quaternion)", 
      "name": "vmath.quat"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "existing quaternion (quaternion)", 
          "name": "q"
        }
      ], 
      "brief": "creates a new quaternion from another existing quaternion", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new quaternion (quaternion)", 
      "name": "vmath.quat"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "x coordinate (number)", 
          "name": "x"
        }, 
        {
          "doc": "y coordinate (number)", 
          "name": "y"
        }, 
        {
          "doc": "z coordinate (number)", 
          "name": "z"
        }, 
        {
          "doc": "w coordinate (number)", 
          "name": "w"
        }
      ], 
      "brief": "creates a new quaternion from its coordinates", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new quaternion (quaternion)", 
      "name": "vmath.quat"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "axis (vector3)", 
          "name": "v"
        }, 
        {
          "doc": "angle (number)", 
          "name": "angle"
        }
      ], 
      "brief": "creates a quaternion from axis and angle", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "quaternion representing the axis-angle rotation (quaternion)", 
      "name": "vmath.quat_axis_angle"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "x base vector (vector3)", 
          "name": "x"
        }, 
        {
          "doc": "y base vector (vector3)", 
          "name": "y"
        }, 
        {
          "doc": "z base vector (vector3)", 
          "name": "z"
        }
      ], 
      "brief": "creates a quaternion from three base vectors", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "quaternion representing the rotation of the specified base vectors (quaternion)", 
      "name": "vmath.quat_basis"
    }, 
    {
      "description": "The resulting quaternion describes the rotation that would make the first vector end up at the second.", 
      "parameters": [
        {
          "doc": "first vector, before rotation (vector3)", 
          "name": "v1"
        }, 
        {
          "doc": "second vector, after rotation (vector3)", 
          "name": "v2"
        }
      ], 
      "brief": "creates a quaternion based on a vector rotation", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "quaternion representing the rotation from first to second vector (quaternion)", 
      "name": "vmath.quat_from_to"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "angle in radians around x-axis (number)", 
          "name": "angle"
        }
      ], 
      "brief": "creates a quaternion from rotation around x-axis", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "quaternion representing the rotation around the x-axis (quaternion)", 
      "name": "vmath.quat_rotation_x"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "angle in radians around y-axis (number)", 
          "name": "angle"
        }
      ], 
      "brief": "creates a quaternion from rotation around y-axis", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "quaternion representing the rotation around the y-axis (quaternion)", 
      "name": "vmath.quat_rotation_y"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "angle in radians around z-axis (number)", 
          "name": "angle"
        }
      ], 
      "brief": "creates a quaternion from rotation around z-axis", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "quaternion representing the rotation around the z-axis (quaternion)", 
      "name": "vmath.quat_rotation_z"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "quaternion (quaternion)", 
          "name": "q"
        }, 
        {
          "doc": "vector to rotate (vector3)", 
          "name": "v"
        }
      ], 
      "brief": "rotates a vector by a quaternion", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "the rotated vector (vector3)", 
      "name": "vmath.rotate"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "interpolation parameter, 0-1 (number)", 
          "name": "t"
        }, 
        {
          "doc": "vector to slerp from (vector3 or vector4)", 
          "name": "v1"
        }, 
        {
          "doc": "vector to slerp to (vector3 or vector4)", 
          "name": "v2"
        }
      ], 
      "brief": "slerps between two vectors", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "the slerped vector (vector3 or vector4)", 
      "name": "vmath.slerp"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "interpolation parameter, 0-1 (number)", 
          "name": "t"
        }, 
        {
          "doc": "quaternion to slerp from (quaternion)", 
          "name": "q1"
        }, 
        {
          "doc": "quaternion to slerp to (quaternion)", 
          "name": "q2"
        }
      ], 
      "brief": "slerps between two quaternions", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "the slerped quaternion (quaternion)", 
      "name": "vmath.slerp"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "table of numbers", 
          "name": "t"
        }
      ], 
      "brief": "creates a new vector from a table of values", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new vector (vector)", 
      "name": "vmath.vector"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "creates a new zero vector", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new zero vector (vector3)", 
      "name": "vmath.vector3"
    }, 
    {
      "description": "The value is set for every component", 
      "parameters": [
        {
          "doc": "scalar value to splat (number)", 
          "name": "n"
        }
      ], 
      "brief": "creates a new vector from scalar value", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new vector (vector3)", 
      "name": "vmath.vector3"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "existing vector (vector3)", 
          "name": "v"
        }
      ], 
      "brief": "creates a new vector from another existing vector", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new vector (vector3)", 
      "name": "vmath.vector3"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "x coordinate (number)", 
          "name": "x"
        }, 
        {
          "doc": "y coordinate (number)", 
          "name": "y"
        }, 
        {
          "doc": "z coordinate (number)", 
          "name": "z"
        }
      ], 
      "brief": "creates a new vector from its coordinates", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new vector (vector3)", 
      "name": "vmath.vector3"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "creates a new zero vector", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new zero vector (vector4)", 
      "name": "vmath.vector4"
    }, 
    {
      "description": "The value is set for every component", 
      "parameters": [
        {
          "doc": "scalar value to splat (number)", 
          "name": "n"
        }
      ], 
      "brief": "creates a new vector from scalar value", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new vector (vector4)", 
      "name": "vmath.vector4"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "existing vector (vector4)", 
          "name": "v"
        }
      ], 
      "brief": "creates a new vector from another existing vector", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new vector (vector4)", 
      "name": "vmath.vector4"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "x coordinate (number)", 
          "name": "x"
        }, 
        {
          "doc": "y coordinate (number)", 
          "name": "y"
        }, 
        {
          "doc": "z coordinate (number)", 
          "name": "z"
        }, 
        {
          "doc": "w coordinate (number)", 
          "name": "w"
        }
      ], 
      "brief": "creates a new vector from its coordinates", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "new vector (vector4)", 
      "name": "vmath.vector4"
    }
  ]
}