{
  "elements": [
    {
      "description": "", 
      "parameters": [], 
      "brief": "android build fingerprint", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_ANDROID_BUILD_FINGERPRINT"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "system device language as reported by sys.get_sys_info", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_DEVICE_LANGUAGE"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "device manufacturer as reported by sys.get_sys_info", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_DEVICE_MANUFACTURER"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "device model as reported by sys.get_sys_info", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_DEVICE_MODEL"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "engine version as hash", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_ENGINE_HASH"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "engine version as release number", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_ENGINE_VERSION"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "system language as reported by sys.get_sys_info", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_LANGUAGE"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "system name as reported by sys.get_sys_info", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_SYSTEM_NAME"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "system version as reported by sys.get_sys_info", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_SYSTEM_VERSION"
    }, 
    {
      "description": "", 
      "parameters": [], 
      "brief": "system territory as reported by sys.get_sys_info", 
      "examples": "", 
      "type": "VARIABLE", 
      "return_": "", 
      "name": "crash.SYSFIELD_TERRITORY"
    }, 
    {
      "description": "the addresses of the call stack.", 
      "parameters": [
        {
          "doc": "Crash dump handle", 
          "name": "handle"
        }
      ], 
      "brief": "Read back trace recorded in a loaded crash dump. A table is returned containing", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "Table containing the backtrace", 
      "name": "crash.get_backtrace"
    }, 
    {
      "description": "but can be useful for manual inspection.", 
      "parameters": [
        {
          "doc": "Crash dump handle", 
          "name": "handle"
        }
      ], 
      "brief": "Read platform-specific text blob recorded in a crash dump. Format is not guaranteed", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "String with the platform specific data", 
      "name": "crash.get_extra_data"
    }, 
    {
      "description": "containing entries with sub-tables that have 'name' and 'address' set.", 
      "parameters": [
        {
          "doc": "Crash dump handle", 
          "name": "handle"
        }
      ], 
      "brief": "Get a table of all loaded modules from when the crash occured. The function returns a table", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "module table", 
      "name": "crash.get_modules"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "Crash dump handle", 
          "name": "handle"
        }
      ], 
      "brief": "Read signal number from a crash report", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "signal number", 
      "name": "crash.get_signum"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "Crash dump handle", 
          "name": "handle"
        }, 
        {
          "doc": "System field enum", 
          "name": "index"
        }
      ], 
      "brief": "Read a system field from a loaded crash dump", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "Value recorded in the crash dump", 
      "name": "crash.get_sys_field"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "Crash dump handle", 
          "name": "handle"
        }, 
        {
          "doc": "User data slot index", 
          "name": "index"
        }
      ], 
      "brief": "Read user field from a loaded crash dump", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "User data value recorded in the crash dump", 
      "name": "crash.get_user_field"
    }, 
    {
      "description": "load, so loading is one-shot.", 
      "parameters": [], 
      "brief": "Load a previously written crash dump. The crash dump will be removed from disk upon a successful", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "handle to the loaded dump, or nil if no dump was found", 
      "name": "crash.load_previous"
    }, 
    {
      "description": "", 
      "parameters": [
        {
          "doc": "to loaded crash dump", 
          "name": "handle"
        }
      ], 
      "brief": "Release a previously loaded crash dump.", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "", 
      "name": "crash.release"
    }, 
    {
      "description": "is set will be stored to a default engine location.", 
      "parameters": [
        {
          "doc": "file path to use", 
          "name": "path"
        }
      ], 
      "brief": "Set the location for where crash dumps will be written. Crashes occuring before the path", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "", 
      "name": "crash.set_file_path"
    }, 
    {
      "description": "a crash occurs. This can be user id:s, breadcrumb data etc. There are 32 slots\nindexed from 0. Each slot stores at most 255 characters.", 
      "parameters": [
        {
          "doc": "Slot index (0-indexed)", 
          "name": "index"
        }, 
        {
          "doc": "Value to store", 
          "name": "value"
        }
      ], 
      "brief": "Store user-defined string value that will get written to a crash dump when", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "", 
      "name": "crash.set_user_field"
    }, 
    {
      "description": "The generated dump can be read by crash.load_previous", 
      "parameters": [], 
      "brief": "Perform the same steps as if a crash had just occured, but allow the program to continue.", 
      "examples": "", 
      "type": "FUNCTION", 
      "return_": "", 
      "name": "crash.write_dump"
    }
  ]
}